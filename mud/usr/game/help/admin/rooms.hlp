~name{pokój,pokoj,pokoje}
~keywords{admin}
~desc{

Pokoje to obiekty które są zarejestrowane z MAPD.

Niektóre komedy do zabawy z pokojami:

@list                    Pokaż istniejące pokoje według numerów
@make_room               Utwórz nowy pokój odpowiadając na pytania
@stat                    Zobacz szczegóły wybranego według numeru pokoju
@goto                    Idź do wybranego według numeru pokoju
@save_rooms              Zapisz pokoje do pliku
@load_rooms              Załaduj pokoje z pliku
@new_room                Utwórz nowy pokój
@delete_room             Usuń pokój

}


~name{list_room,lista pokoi,list,list_rooms}
~keywords{admin}
~desc{

Komenda @list pokazuje ponumerowaną listę pokoi w grze, zarejestrowanych
z Demonem Map (MAPD). Wylistowuje każdy poków z numerem oraz krótkim
(brief) opisem.

Domyślnie pokazane są tylko pokoje w obecnej strefie. Ten sam efekt można
osiągnąć używając komendy "@list zone". Aby zobaczyć wszystkie pokoje
w grze, wpisz "@list all".

}


~name{make_room,make_rooms}
~keywords{admin}
~desc{

Komenda @make_room zadaje parę pytań na temat nowego obiektu, który
będzie utworzony. Następnie tworzy ten obiekt tak jak opisano go
w odpowiedziach. Pyta o opisy, rzeczowniki, przymiotniki itd.


Niektóre najnowsze atrybuty obiektów mogą nie być możliwe do ustawienia
przy pomocy tej komendy. Jednak wraz z czasem i one się pojawiają w
różnych komendach @make. Z tego powodu niektóre ustawienia mogą wymagać
użycia standardowych komend OLC zamiast tej.

Zobacz również:  @make_portable, @make_detail

}


~name{goto}
~keywords{admin}
~desc{

@goto pobiera numer pokoju lub przenośnego jako argument i teleportuje
Ciebie do tego obiektu. Działa tylko z ponumerowanymi pokojami i
przenośnymi.

}

~name{save_rooms,save_room}
~keywords{admin}
~desc{

Komenda @save_rooms pobiera ścieżkę absolutną jako argument i
zapisuje do tego pliku pokoje w odpowiednim formacie. Domyślnie zapisuje
wszystkie pokoje w grze za wyjątkiem pokoju #0, Pustka. Można również
podać serię dodatkowy argumentów jako numery pokojów do zapisu.

Przykłady:
@save_rooms /data/object/whole_mud.unq
@save_rooms /data/object/my_zone.unq #3 #4 #5 #7 #23 #91 #2

}

~name{load_rooms,load_room}
~keywords{admin}
~desc{

Pierwszy argument komendy @load_rooms pobiera absolutną ścieżkę do
pliku i załadowuje pokoje które w nim się znajdują. Może załadować
wszystkie pokoje albo wybrane pokoje, jeżeli podano ich numery
podczas wpisywania komendy. Żaden z ładowanych pokojów nie może mieć
numeru takiego samego jak już zarejestrowany w grze pokój.

Używaj tej komendy z dużą ostrożnością aby uniknąć dużej ilości
zduplikowanych pokoi. Zapamietaj również, że pokoje bez numerów będące
w pliku nie mogą być załadowane przy użyciu drugiej formy tej komendy,
podanymi numerami pokojów.

Przykłady:
  @load_rooms /data/object/testload.unq
  @load_rooms /data/object/numtest.unq #34 #47 #12
}


~name{~enUS{new_rooms, new_room, newrooms, add room, add rooms,
            newroom, addroom, roomnew, roomadd, new, create, add,
            create rooms, create room, createroom, createrooms}}
~keywords{admin}
~desc{
  ~enUS{

The @new_room command allocates a new room.  If supplied a number it
will attempt to allocate that room number, otherwise it will fail.

The new room will be registered with MAPD, and standard object and
room commands will work perfectly well on it.  It should immediately
be visible with @list_rooms, and @goto should take you to it if you
wish.

If no number is supplied, the new room will be in the same zone as
your current location.

See also:  @new_portable, MAPD

}}


~name{~enUS{delete_rooms, delete_room, deleterooms, deleteroom, roomdelete,
            delete, destroy, destroy_rooms, destroy_room }}
~keywords{admin}
~desc{
  ~enUS{

The @delete_room command will delete a room, removing all exits to and
from it (see @clear_exits).  It is recommended that all contents be
removed from the room first as no guarantees are made as to their
locations afterward.

Remember that a "room" could instead be a portable object or a
mobile's body.

}}
