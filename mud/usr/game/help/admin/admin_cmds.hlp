~name{admin,administrator}
~keywords{admin}
~desc{

Otrzymasz tutaj pomoc na temat poszczególnych komend. Wiele z nich
wymaga odpowiednich uprawnień aby mogły być wykonane pomyślnie.

%shutdown           Wyłącza MUDa
%reboot             Rebootuje MUDa
%swapout            Wymiana obiektów MUDa
%statedump          Zrzuca pełny stan MUDa do pliku
%save               Zapisuje obiekty i graczy (jak przy wyłączeniu)
%safesave           Zapisuje bezpieczną kopię plików obiektów

%status             Podaje status MUDLiba i serwera

%who                Pokazuje kto jest zalogowany z adresem IP
%log                Zapisuje wydarzenia do logów systemowych
%log_subscribe      Wybiera jakie wydarzenia z dziennika są zapisywane
                    do pliku
%zgloszenia         Zobacz zgłoszenia błędów/literówek/pomysłów

}


~name{%shutdown}
~keywords{admin}
~desc{

Komenda %shutdown zapisze cały stan gry, włączając w to rzeczy takie
jak pokoje, wyjścia i przenośne. Następnie po prostu sprawi, że MUD
przestanie działać i proces drivera zostanie zakończony na komputerze.

Jeżeli wystąpi błąd podczas zapisywania obiektów, MUD NIE będzie
kontynuować procesu wyłączania. Możesz poprawić ten błąd i wtedy
spróbować wyłączyć grę ponownie. Ponieważ Phantasmal i DGD pozwalają
Tobie rekompilować kod bez problemu, tak mały błąd jest zazwyczaj
nie wystarczającym powodem aby poddać się i wyłączyć grę bez zapisu
danych.

Jeżeli jednak naprawdę tego chcesz, możesz wpisać "%shutdown force"
aby wyłączyć Laeran *bez* zapisywania jakichkolwiek danych.

Zobacz rówież %reboot.

}

~name{%reboot,restart}
~keywords{admin}
~desc{

Komenda %reboot zapisze stan gry wraz z pokojami, wyjściami,
przenośnymi itd. Następnie spróbuje zrebootować grę i przeładować
te same pliki. Być może czasami jest to przydatne, ale idea
trwałego MUD'a jest aby *nigdy* nie było to wymagane. Proszę używać
funkcji upgraded() w obiektach i korzystać z komendy %full_rebuild
zamiast %reboot tam gdzie jest to możliwe.

Jeżeli wystąpi błąd podczas zapisywania obiektów, w normalnej sytuacji
gra NIE będzie kontynuować wyłączania -- możesz naprawić ten błąd
ręcznie i dopiero wtedy wyłączyć MUD'a ponownie albo możesz też ręcznie
zabić proces drivera na serwerze.

Zobacz również %shutdown.

}

~name{%swapout,wymiana}
~keywords{admin}
~desc{

Komenda %swapout wymieni większość lub wszystkie obiekty przechowywane
obecnie w pamięci. Ponieważ DGD samodzielnie wymienia obiekty wraz
z ich użyciem, zmiany wykonane przy pomocy tej komendy nie powinny
być widoczne dla graczy czy koderów poza możliwymi opóźnieniami, co
czyni tę komendę niezbyt użyteczną.

Zazwyczaj lepiej jest używać komend %statedump, %shutdown, %save lub
%reboot.

Zobacz również: %statedump, %save, %shutdown, %reboot

}


~name{%statedump,zrzut stanu}
~keywords{admin}
~desc{

Komenda %statedump wykona zrzut pamięci środowiska LPC MUDa do pliku,
który można później ponownie załadować. To jest dużo bardziej
kompletne i mniej podatne na błędy zachowanie aby wyłączyć i włączyć
grę ponownie niż mechanizm %shutdown połączony z autoładowaniem
obiektów. Jednakże może to pogorszyć niektóre błędy programistyczne
ze względu na trwały model gry. Aby dowiedzieć się więcej na ten
temat, zajrzyj na listę dyskusyjną DGD. Tego typu MUDy zostały tam
omówione bardzo dokładnie, jak pewnie i na innych forach również.

Zobacz również: %shutdown, %reboot, %save

}


~name{zapisywanie,%save}
~keywords{admin}
~desc{

Komenda %save zapisuje obiekty do plików na dysku. Używa tej samej
mechaniki jak opcja wyłączania gry i może przestać się wykonywać
w dokładnie ten sam sposób i w tym samym momencie. Komenda %statedump
działa nieco inaczej i używa innego mechanizmu -- zobacz "%statedump".

Zobacz również: %shutdown, %reboot, %safesave, %statedump

}


~name{%safesave,bezpieczne zapisywanie}
~keywords{admin}
~desc{

Komenda %safesave zapisuje obiekty, mobki, strefy do plików. Używa
dokładnie tego samego mechanizmu jak zapisywanie podczas wyłączania
gry i może przestać się wykonywać w dokładnie ten sam sposób i w
tym samym momencie. Jednakże w odróżnieniu od komendy %save ta tworzy
dodatkowe "bezpieczne" kopie plików które nie będą nadpisane/załadowane
podczas startu. Dostarcza to dodatkową kopię zapasową na wszelki
wypadek, gdyby wydarzyło się coś złego Twojej głównej kopii danych.
Komenda %statedump działa nieco inaczej i używa innego mechanizmu --
zobacz "%statedump".

Zobacz również: %shutdown, %reboot, %safesave, %statedump

}


~name{%status}
~keywords{admin}
~desc{

Komenda %staus podaje niskopoziomowe informacje o procesie drivera
DGD, włączając jaka wersja DGD jest używana, statystyki przestrzeni
wymiany oraz pamięci, jak wiele dozwolonych obiektów, calloutów i
połączeń jest używanych oraz czas startu i uptime.

}


~name{%who}
~keywords{admin}
~desc{

Komenda %who pokazuje listę obecnie zalogowanych graczy w grze,
wraz z ich adresami IP z których obecnie są zalogowani.

}

~name{%log,%writelog}
~keywords{admin}
~desc{

Komenda @log (zwana również %log lub %writelog) pobiera pojedynczy
argument tekstowy, podobnie jak komenda "mow". Jednakże ta zapisuje
ten teks wraz z Twoim imieniem do logów systemowych. Generalnie,
jest to bardzo prosta metoda wysłania czegoś na kształt emaila, za
wyjątkiem dużych MUDów, ponieważ przez większość czasu logi są
regularnie czytane (bądź nie) i czyszczone aby zrobić miejsce dla
nowych.

Zobacz również:  %log_subscribe, logi, kanał log

}

~name{%log_subscribe}
~keywords{admin}
~desc{

Komenda %log_subscribe pozwala komuś z pełnymi uprawnieniami
administracyjnymi określić co będzie zapisywane do logów
systemowych. Jest to określane poprzez kategorie albo kanały,
najczęściej nazywane od oryginalnego pliku/programu. Następujący
przykład pokaże tylko błędy i ostrzeżenia z demona obiektów:

   %log_subscribe /usr/System/sys/objectd 4

Poziomy wiadomości to:

     Krytyczny błąd           6            fatal
     Błąd                     5            error
     Ostrzeżenie              4            warning
     Wiadomość debugująca     3            debug
     Normalne działanie       2            normal
     Głośne działanie         1            verbose

Możesz wpisać tekstową zmienną z prawej kolumny (normal, fatal,
itd) zamiast numeru aby ustawić poziom wiadomości.

}

~name{~enUS{log file, file log, logfile, file}}
~keywords{admin}
~desc{
  ~enUS{

The log file keeps track of what's going on in the MUD.
Administrators can see entries as they are made on the log channel.
They can choose what goes into it with the %log_subscribe command.
Its current default location is /log/System.log in the Phantasmal
directory tree.

See also:  log channel, %log_subscribe

}}


~name{~enUS{log channel, channel log, logchannel}}
~keywords{admin}
~desc{
  ~enUS{

Administrators can subscribe to the log channel with the channels
command.  You can also subscribe at a particular level of severity
with the same command.  For instance:

channel log on verbose
channel log on error

You'll get all notifications at that level and above (so "verbose"
gives lots), even if the logfile isn't actually receiving them
because of its %log_subscribe settings.

See also:  logfile, %log_subscribe

}}


~name{~enUS{error channel, channel error, errorchannel}}
~keywords{admin}
~desc{
  ~enUS{

Administrators can subscribe to the error channel with the channels
command.  You can also subscribe at a particular level of severity
with the same command.  For instance:

channel error on verbose
channel error on error

Currently errors aren't divided by severity, so any subscription to
the channel will send you all uncaught errors that the ErrorD
receives.

See also:  logfile, %log_subscribe

}}

~name{zgloszenia, zgłoszenia}
~keywords{admin}
~desc{

Administratorzy mogą przeglądać wszystkie zgłoszenia błędów, literówek
czy pomysłów, które zostały wysłane przez graczy. Aby zobaczyć wybrane
zgłoszenia należy podać rodzaj zgłoszeń. Użycie:

zgloszenia bug          pokaże zgłoszenia wszytkich błędów
zgloszenia idea         pokaże wszystkie zgłoszone propozycje
zgloszenia literowka    pokaże wszystkie zgłoszenia literówek
zgloszenia pomoc        pokaże wszystkie zgłoszenia brakującej pomocy

Wpisanie samej komendy czy też komendy z nieprawidłową opcją, pokaże
wszystkie dostępne opcje dla komendy.

}