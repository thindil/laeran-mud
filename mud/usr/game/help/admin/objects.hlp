~name{obiekty,obiekt}
~keywords{admin}
~desc{

Obiekty w Phantasmal to nie tylko przenośne rzeczy (tradycyjne
znaczenie obiektów) ale również pokoje, detale, wyjścia i inne.
Istnieje wiele komend dla obiektów które działają ze wszystkimi
tego typu rzeczami. Oto obecna lista komend:

pomoc @stat
pomoc @move

pomoc @set_glance
pomoc @set_brief
pomoc @set_look
pomoc @set_examine

pomoc @set_object_article
pomoc @set_object_detail
pomoc @add_nouns
pomoc @add_adjectives
pomoc @clear_nouns
pomoc @clear_adjectives

pomoc @set_object_value       (To jest rodzina komend)

pomoc @delete

Zobacz również komendy dla przenośnych, pokoi i innych aby poznać
specyficzne operacje dla wybranych obiektów.

}


~name{segment,segmenty,seg}
~keywords{admin}
~desc{

Obiekty są przydzielone do 100-liczbowych segmentów. Na przykład zakres
#1300-#1399 formuje jeden segment. Wybrany segment jest zarządzany tylko
przez jednego demona, na przykład, jeżeli segment 1300 zawiera pojedynczy
poków (zarządzany przez MAPD) wteyd wszystko w tym segmencie musi być
pokojem (lub może być pusty).

Zobacz @segmap, @set_segment_zone.

}


~name{segment_map,seg_map,segmap}
~keywords{admin}
~desc{

Komenda @segment_map (lub @segmap) pokazuje listę segmentów ponumerowanych
w porządku rosnącym z informacją o każdym zarządzającym nim demonie. Na 
przykład:

    Segmenty:
    0   /usr/common/sys/mapd
    1   /usr/common/sys/exitd
    2   /usr/common/sys/mobiled

W tym wypadku, #0-#99 będą pokojami zarządzanymi przez MAPD, #100-#199
będą wyjściami zarządzanymi przez EXITD a #200-#299 będą mobkami
zarządzanymi przez MOBILED.

Zobacz również:  MAPD, EXITD, MOBILED, @set_seg_zone

}


~name{set_segment_zone,set_seg_zone, set segment zone}
~keywords{admin}
~desc{

Komenda @set_segment_zone lub @set_seg_zone ustawia strefę dla wybranego
segmentu, tak aby należał do niej (patrz "pomoc @segmap"). Podana strefa
najczęściej obejmuje jakąś liczbę segmentów zawierających pokoje,
przenośne, wyjścia i inne. Grupowanie segmentów w strefy pozwala budowniczym
zebrać wszystko co związane ze sobą na wybranym obszarze bez względu
na typ obiektu. Składnia to:

@set_seg_zone #6 #2

Komenda powyżej przypisze segment 6, zawierający obiekty #600-#699 do
strefy #2.

Zobacz również:  @segmap, segmenty, @zonemap, strefy

}


~name{zone_map, zonemap}
~keywords{admin}
~desc{

Komenda @zonemap pokazuje listę aktualnych stref w grze, pogrupowanych
według numerów, podając krótki opis każdej strefy.

Zobacz również:  @segmap, @set_seg_zone, segmenty, strefy

}


~name{set_brief,brief,krótki opis,krotki opis}
~keywords{admin}
~desc{

Krótki opis (brief) jest najkrótszym opisem wszystkich obiektów i
normalnie jest używany jako część listy obiektów, więc postaraj się
ustawiać go na najkrótszy jak się da. Może być ustawiony poprzez
"@set_brief #75 kwiat" lub po prostu "@set_brief #75".

Jeżeli jest użyty w drugiej formie, wejdziesz w specjalny tryb
tekstowy. Nie będziesz mógł użyć jakiejkolwiek komendy dopóki nie
wpiszesz w nowej linii znaku tyldy (\~) aby przestać wprowadzać
opis.

Zobacz rówież @set_look, @set_examine

}

~name{set_look,set_look_desc}
~keywords{admin}
~desc{

Opis Patrz (Look) jest podawany kiedy obiekt jest obserwowany
przez jakiś okres czasu. Jest to podstawowy opis pokoju albo opis,
który gracz otrzymuje po spojrzeniu na wybrany przenośny, detal bądź
wyjście. Może być ustawiony przez komendę @set_look: "@set_look #75
Bardzo ładny kwiat z płatkami i liśćmi" albo po prostu "@set_look #75".

Jeżeli jest użyty w drugiej formie, wejdziesz w specjalny tryb
tekstowy. Nie będziesz mógł użyć jakiejkolwiek komendy dopóki nie
wpiszesz w nowej linii znaku tyldy (\~) aby przestać wprowadzać
opis.

Zobacz również @set_brief, @set_examine

}


~name{set_examine}
~keywords{admin}
~desc{

Opis Zbadaj (Examine) jest podawany kiedy obiekt jest dokładnie
badany przy pomocy długotrwałej czynności. Gracz otrzyma ten
opis jeżeli użyje komendy "zbadaj". Ten opis jest opcjonalny w 
odróżnieniu od innych. Może być ustawiony przy pomocy komendy
@set_examine: "@set_examine #75 Widzisz robaka na kwiecie!"
albo po prostu "@set_examine #75".

Jeżeli jest użyty w drugiej formie, wejdziesz w specjalny tryb
tekstowy. Nie będziesz mógł użyć jakiejkolwiek komendy dopóki nie
wpiszesz w nowej linii znaku tyldy (\~) aby przestać wprowadzać
opis.

Zobacz również @set_brief, @set_look

}

~name{set_obj_flag,contain,cont,container,containers,
            open,openable,set container,set locked,set lockable, 
            locked,lockable,set open,set openable}
~keywords{admin}
~desc{

Komenda @set_obj_fla ustawia flagi na obiekcie np czy jest pojemnikiem
i czy jest otwarty. Na przykład:

  @set_obj_flag #237 cont true
  @set_obj_flag #294 open 0
  @set_obj_flags #901 openable 1

Wartości, jeżeli są podane powinny oznaczać prawdę lub fałsz -- jak
"true", "false", "yes", "no", 1, 0. Jeżeli nie podano wartości,
wtedy domyślnie jest ustalana na prawdę. Pierwszy argument to numer
obiektu, któremu ustawiamy flagi. Drugi argument to nazwa flagi.

Aby zobaczyć pełną listę flag, wpis "@set_obj_flag flagi".

}



~name{rodzic,potomek,dziedziczenie,archetyp}
~keywords{admin}
~desc{

Phantasmal używa dziedziczenia danych aby przekazać niektóre wartości
obiektów z rodziców na potomków. Obiekt może dziedziczyć z listy
rodziców a jego wartości będą dziedziczone z kilku bądź wszystkich
tych rodziców.

Opisy, jak patrz i krótki będą dziedziczone tylko z pierwszego
rodzica na liście. Rzeczowniki, przymiotniki i detale będą dziedziczone
ze wszystkich rodziców z listy i łączone w jedną dużą grupę. Waga,
objętość, wysokość oraz pojemność będą dziedziczone tylko z pierwszego
rodzica.

Inne wartości, jak na przykład tagi, mogą być dziedziczone w ten sam
bądź inny sposób.

Zauważ że jest to odmienne od dziedziczenia kodu w LPC. Prawdę mówiąc,
niemal odwrotne.

Zobacz również:  @set_obj_parent

}


~name{set_obj_parent,set_obj_par,set_parent}
~keywords{admin}
~desc{

Komenda @set_obj_parent(albo @set_parent) dodaje bądź usuwa rodziców
z obiektu dla dziedziczenia danych. Oznacza to że obiekt potomny będzie
przyjmował różne dane, włączając detale, z obiektu(ów) nadrzędnych.
Składnia to "@set_obj_parent <potomek> <rodzic>" gdzie "<potomek>" i
"<rodzic>" to numery pokojów bądź przenośnych poprzedzone znakiem hash
("#").

Jeżeli "<parent>" jest słowem 'none', wszyscy rodzice zostaną usunięci
i obiekt będzie ustawiony bez rodziców. Jeżeli słowo "add" lub "remove"
poprzedza listę rodziców, ci rodzice będą dodani ("add") bądź usunięci
("remove"). Jeżeli słowo "set" poprzedza listę rodziców, ta lista będzie
ustawiona jako lista rodziców dla obiektu.

Słowo "set" może być użyte do zmiany kolejności na liście rodziców.
W takim wypadku, po prostu wpisz wszystkich obecnych rodziców przedmiotu
w odpowiedniej kolejności. Jeżeli słowo "set" zmienia również *którzy*
rodzice będą dziedziczeni (nie tylko ich kolejność), wtedy detale,
rzeczowniki i przymiotniki będą przeliczone ponownie aby odzwierciedlić
nowe dziedziczenie. Jeżeli rodzice są tacy sami jak byli, tylko w innej
kolejności, tylko zależne od kolejności ustawienia zostaną zmienione --
rzeczowniki, przymiotniki czy detale pozostaną takie same.

Użycie: @set_obj_parent #791 none
        @set_obj_parent #947 set #322 #741 #909
        @set_obj_parent #947 remove #322 #741

Możesz sprawdzić obecnych rodziców obiektu, używając komendy '@stat'.

Zobacz również: dziedziczenie

}


~name{move}
~keywords{admin}
~desc{

Komenda @move pobiera dwa numery obiektów jako argumenty. Pierwszy to
obiekt, który będzie przenoszony, drugi to lokacja do której ów obiekt
będzie przeniesiony. Na przykład:

@move #200 #0

Komenda powyżej przeniesie obiekt #200 do obiektu #0 (Pustka, Void).
Komenda działa na pokojach oraz przenośnych w obu wypadkach jako
obiekty do przeniesienia oraz lokacje. Możesz również użyć słowa
"here" zamiast drugiego numeru aby przenieść obiekt do pokoju w 
którym obecnie się znajdujesz.

Zobacz również @goto

}

~name{stat}
~keywords{admin}
~desc{

Komenda @stat podaje komplentne informacje na temat wybranego obiektu.
Na przykład możesz wpisać "@stat #0" aby zobaczyć opisy Pustki (Void), co
zawiera, czy jest zarejestrowana z MAPD i tak dalej. @stat działa z pokojami,
przenośnymi, wyjściami oraz mobkami.

Komenda pokazuje również informacje o dziedziczeniu i tagach wraz z innymi
informacjami.

Przykłady: @stat skrzynia
           @stat #103

Zobacz również:  MAPD, OBJREGD, MOBILED, EXITD, pokój, przenośne, mob, wyjście

}


~name{rzeczownik,rzeczowniki,przymiotnik,przymiotniki}
~keywords{admin}
~desc{

Rzeczowniki to nazwy przy pomocy których gracz może wywoływać obiekt.
Na przykład miecz może mieć jako rzeczowniki "miecz" oraz "ostrze".
Oprócz tego rzeczowniki służą do odmiany nazwy przedmiotu przez
przypadki. Dlatego pierwszy rzeczownik zawsze powinien być w mianowniku
z małej litery, następne powinny być odmianą przez przypadki. Czyli
w przypadku miecza: "miecz, miecza, mieczowi, miecz, mieczem, mieczu,
miecza, ostrze".

Przymiotniki to opisy tych nazw. Gracz może odwoływać się do obiektu
podając najpierw dowolny przymiotnik a na koniec dokładnie jeden 
rzeczownik. Więc jeżeli miecz ma "ciężki", "metalowy", "podniszczony"
"pordzewiały" jako przymiotniki to może być wywołany przez "ciężki metalowy
podniszczony miecz" lub "pordzewiały miecz" lub "ostrze" lub "ciężki metalowy
ciężki podniszczony metalowy miecz". Jednakże nie może być wywołany przez
"podniszczony" czy "pordzewiały metalowy".

Rzeczowniki są ustawiane komendą @add_nouns albo @make_room czy jej
odpowiedniku. Komenda @clear_nouns usunie wszystkie rzeczowniki z obiektu.
Podobnie przymiotniki można dodawać komendą @add_adj i usuwać przy pomocy
@clear_adj.

Rzeczowniki i przymiotniki są dziedziczone z obiektów rodzicielskich.

Zobacz również: @add_nouns, @clear_nouns, @add_adj, @clear_adj

}

~name{addnoun,add_noun}
~keywords{admin}
~desc{

Komenda @add_noun dodaj jeden lub więcej jednowyrazowych rzeczowników
do listy rzeczowników obiektu. Obiekt może być wtedy wywoływany przy
użyciu tychże rzeczowników.

Składnia: @add_noun #<numer obiektu> rzeczownik [rzeczownik rzeczownik
rzeczownik ...]

Zobacz również: @stat, @clear_nouns, @add_adjective
}



~name{addadjective,add_adjective,addadj,add_adj}
~keywords{admin}
~desc{

Komenda @add_adj dodaje jeden lub więcej jednowyrazowych przymiotników
do listy przymiotników obiektu. Obiekt może być wtedy wywoływany przy
użyciu tychże przymiotników.

Składnia: @add_adj #<numer obiektu> przymiotnik [przymiotnik, przymiotnik,
przymiotnik ...]

Zobacz również: @stat, @clear_adjectives, @add_noun

}



~name{clearnoun,clear_noun,clearnouns,clear_nouns}
~keywords{admin}
~desc{

Komenda @clear_nouns usuwa wszystkie rzeczowniki z obiektu, więc nowe
powinny być dodane przy pomocy komendy @add_noun.

Składnia: @clear_nouns #<numer obiektu>

Zobacz również: @clear_adjectives, @add_noun
}


~name{clearadjective,clear_adjective,clearadjectives,clear_adjectives,
            clearadj, clear_adj}
~keywords{admin}
~desc{

Komenda @clear_adj usuwa wszyskie przymiotniki z obiektu, tak więc
nowe powinny być dodane przy pomocy komendy @add_adj.

Składnia: @clear_adjectives #<numer obiektu>

Zobacz również: @clear_nouns, @add_adjective
}

~name{delete,delete_obj,delete_object,delete_objects,deleteobj,deleteobject,
            deleteobjects}
~keywords{admin}
~desc{

Komenda @delete lub @delete_object usuwa obiekt z obecnego pokoju (jeżeli
podana została nazwa) lub dowolny obiekt z gry (jeżeli podano numer). Ten
obiekt może być mobkiem, przenośnym, pokojem lub wyjściem. Przykłady:

@delete #374
@delete czerwona krowa

Zobacz również:  obiekty, @stat

}
